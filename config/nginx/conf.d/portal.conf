# Portal service configuration
server {
    listen 80;
    server_name portal.matatu.local captive.matatu.local;

    # Rate limiting
    limit_req zone=portal burst=20 nodelay;
    limit_conn addr 10;

    # Captive portal detection endpoints
    location = /generate_204 {
        return 204;
    }

    location = /hotspot-detect.html {
        return 302 http://$host/;
    }

    location = /success.txt {
        return 200 "success\n";
        add_header Content-Type text/plain;
    }

    location = /library/test/success.html {
        return 200 "<HTML><HEAD><TITLE>Success</TITLE></HEAD><BODY>Success</BODY></HTML>";
        add_header Content-Type text/html;
    }

    location = /connecttest.txt {
        return 200 "Microsoft Connect Test";
        add_header Content-Type text/plain;
    }

    # Main portal proxy
    location / {
        proxy_pass http://portal_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Client-MAC $http_client_mac;
        proxy_set_header Client-IP $http_client_ip;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for long polling
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # Disable buffering for SSE
        proxy_buffering off;
        proxy_cache off;
    }

    # API endpoints
    location /api/ {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://portal_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Static assets with caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|doc|txt|woff|woff2|ttf)$ {
        proxy_pass http://portal_backend;
        proxy_cache_valid 200 302 1h;
        proxy_cache_valid 404 1m;
        expires 1h;
        add_header Cache-Control "public, immutable";
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}